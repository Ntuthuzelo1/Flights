{"ast":null,"code":"/* tslint:disable */\n/* eslint-disable */\nimport { HttpResponse } from '@angular/common/http';\nimport { filter, map } from 'rxjs/operators';\nimport { RequestBuilder } from '../../request-builder';\nexport function searchFlight(http, rootUrl, params, context) {\n  const rb = new RequestBuilder(rootUrl, searchFlight.PATH, 'get');\n  if (params) {\n    rb.query('FromDate', params.FromDate, {});\n    rb.query('ToDate', params.ToDate, {});\n    rb.query('From', params.From, {});\n    rb.query('Destination', params.Destination, {});\n    rb.query('NumberOfPassengers', params.NumberOfPassengers, {});\n  }\n  return http.request(rb.build({\n    responseType: 'json',\n    accept: 'text/json',\n    context\n  })).pipe(filter(r => r instanceof HttpResponse), map(r => {\n    return r;\n  }));\n}\nsearchFlight.PATH = '/Flight';","map":{"version":3,"mappings":"AAAA;AACA;AACA,SAAkCA,YAAY,QAAQ,sBAAsB;AAE5E,SAASC,MAAM,EAAEC,GAAG,QAAQ,gBAAgB;AAE5C,SAASC,cAAc,QAAQ,uBAAuB;AAYtD,OAAM,SAAUC,YAAY,CAACC,IAAgB,EAAEC,OAAe,EAAEC,MAA4B,EAAEC,OAAqB;EACjH,MAAMC,EAAE,GAAG,IAAIN,cAAc,CAACG,OAAO,EAAEF,YAAY,CAACM,IAAI,EAAE,KAAK,CAAC;EAChE,IAAIH,MAAM,EAAE;IACVE,EAAE,CAACE,KAAK,CAAC,UAAU,EAAEJ,MAAM,CAACK,QAAQ,EAAE,EAAE,CAAC;IACzCH,EAAE,CAACE,KAAK,CAAC,QAAQ,EAAEJ,MAAM,CAACM,MAAM,EAAE,EAAE,CAAC;IACrCJ,EAAE,CAACE,KAAK,CAAC,MAAM,EAAEJ,MAAM,CAACO,IAAI,EAAE,EAAE,CAAC;IACjCL,EAAE,CAACE,KAAK,CAAC,aAAa,EAAEJ,MAAM,CAACQ,WAAW,EAAE,EAAE,CAAC;IAC/CN,EAAE,CAACE,KAAK,CAAC,oBAAoB,EAAEJ,MAAM,CAACS,kBAAkB,EAAE,EAAE,CAAC;;EAG/D,OAAOX,IAAI,CAACY,OAAO,CACjBR,EAAE,CAACS,KAAK,CAAC;IAAEC,YAAY,EAAE,MAAM;IAAEC,MAAM,EAAE,WAAW;IAAEZ;EAAO,CAAE,CAAC,CACjE,CAACa,IAAI,CACJpB,MAAM,CAAEqB,CAAM,IAA6BA,CAAC,YAAYtB,YAAY,CAAC,EACrEE,GAAG,CAAEoB,CAAoB,IAAI;IAC3B,OAAOA,CAAwC;EACjD,CAAC,CAAC,CACH;AACH;AAEAlB,YAAY,CAACM,IAAI,GAAG,SAAS","names":["HttpResponse","filter","map","RequestBuilder","searchFlight","http","rootUrl","params","context","rb","PATH","query","FromDate","ToDate","From","Destination","NumberOfPassengers","request","build","responseType","accept","pipe","r"],"sourceRoot":"","sources":["C:\\Users\\Bhalz\\source\\repos\\Flights\\ClientApp\\src\\app\\api\\fn\\flight\\search-flight.ts"],"sourcesContent":["/* tslint:disable */\r\n/* eslint-disable */\r\nimport { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { StrictHttpResponse } from '../../strict-http-response';\r\nimport { RequestBuilder } from '../../request-builder';\r\n\r\nimport { FlightRm } from '../../models/flight-rm';\r\n\r\nexport interface SearchFlight$Params {\r\n  FromDate?: string;\r\n  ToDate?: string;\r\n  From?: string;\r\n  Destination?: string;\r\n  NumberOfPassengers?: number;\r\n}\r\n\r\nexport function searchFlight(http: HttpClient, rootUrl: string, params?: SearchFlight$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<FlightRm>>> {\r\n  const rb = new RequestBuilder(rootUrl, searchFlight.PATH, 'get');\r\n  if (params) {\r\n    rb.query('FromDate', params.FromDate, {});\r\n    rb.query('ToDate', params.ToDate, {});\r\n    rb.query('From', params.From, {});\r\n    rb.query('Destination', params.Destination, {});\r\n    rb.query('NumberOfPassengers', params.NumberOfPassengers, {});\r\n  }\r\n\r\n  return http.request(\r\n    rb.build({ responseType: 'json', accept: 'text/json', context })\r\n  ).pipe(\r\n    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),\r\n    map((r: HttpResponse<any>) => {\r\n      return r as StrictHttpResponse<Array<FlightRm>>;\r\n    })\r\n  );\r\n}\r\n\r\nsearchFlight.PATH = '/Flight';\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}